@model CinemaShare.Models.InputModels.ReserveTicketInputModel
@using Data.Enums;
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<h1>Reserve</h1>
<span asp-validation-summary=""></span>

<div class="row1">
    <div class="col-md-4">
        <form asp-controller="Tickets" asp-action="Reserve" method="post">
            <hr />
            <div asp-validation-summary="All" class="text-danger"></div>
            <div id="inputForm">
                <div id="inputFields">
                    <div class="form-group">
                        <label asp-for="@Model.TicketInputModels[0].TicketType"></label>
                        <select id="ticketType" asp-for="@Model.TicketInputModels[0].TicketType" asp-items="@Html.GetEnumSelectList<TicketType>()" class="form-control"></select>
                        <span asp-validation-for="@Model.TicketInputModels[0].TicketType" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="@Model.TicketInputModels[0].Seat"></label>
                        <select id="seatField" asp-for="@Model.TicketInputModels[0].Seat" asp-items="@Model.AvailableSeats" class="form-control seatclass"></select>
                        <span asp-validation-for="@Model.TicketInputModels[0].Seat" class="text-danger"></span>
                    </div>
                </div>
                <hr />
                @if (Model.TicketInputModels?.Count > 1)
                {
                    @foreach (var ticket in Model.TicketInputModels?.Select(x => x.Value).Skip(1))
                    {
                        <div>
                            <div class="form-group">
                                <label asp-for="@ticket.TicketType"></label>
                                <select id="ticketType" asp-for="@ticket.TicketType" asp-items="@Html.GetEnumSelectList<TicketType>()" class="form-control"></select>
                                <span asp-validation-for="@ticket..TicketType" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <label asp-for="@ticket.Seat"></label>
                                <select id="seatField" asp-for="@ticket.Seat" asp-items="@Model.AvailableSeats" class="form-control"></select>
                                <span asp-validation-for="@ticket.Seat" class="text-danger"></span>
                            </div>
                            <hr />
                        </div>
                    }
                }
            </div>
            <button type="button" id="addBut" class="btn btn-primary">Add ticket</button>
            <br /><hr />
            <label id="totalPrice"></label>
            <br /><hr />
            <button type="submit" id="submitBut" class="btn btn-success">Reserve all</button>
        </form>
        <script>
            $(document).ready(function () {
                const max_fields = 9;
                var wrapper = $("#inputForm");
                var add_button = $("#addBut");
                var fields = $("#inputFields");
                var price_field = $("#totalPrice");
                @{var fields = Model.TicketInputModels?.Count ?? 0;}
                var fields_count = @fields;
                const sumReducer = (accumulator, currentValue) => accumulator + currentValue;
                const indexRegex = /[[0-9]]/g;
                var total_fields_append = 0;
                var total_price = 0;
                var prices = {};
                var ticketPrices = { 0:@Model.AdultPrice, 1:@Model.StudentPrice, 2:@Model.ChildrenPrice};

                $(wrapper).find("#ticketType").each(function () {
                    var elementHtml = $(this).parent().html();
                    var index = elementHtml.match(indexRegex)[0][0];
                    var fieldValueTicketType = $(this).val();
                    prices[index] = ticketPrices[fieldValueTicketType];
                    updatePrice();
                });

                $(add_button).click(function (e) {
                    e.preventDefault();
                    if (fields_count < max_fields) {
                        fields_count++;
                        total_fields_append++;
                        prices[total_fields_append] = ticketPrices[0];
                        updatePrice();
                        $(wrapper).append('<div>' + fields.html().replace(/[[0]]/g, `${total_fields_append}]`) +
                            '<button type="button" id="delBut" class="btn btn-danger" >Delete</button ><hr /></div>');
                        //TODO....
                        var found = false;
                        $(fields).find("#seatField option").each(function (x) {
                            if (!found) {
                                var availableOption = $(this).val();
                                console.log(availableOption);
                                $(wrapper).find(".seatclass").each(function (a) {
                                    if (!found && availableOption != $(this).val()) {
                                        console.log($(this).val())
                                        $(this).val(`${availableOption}`).change();
                                        found = true;
                                        return;
                                    }
                                });
                            }
                        });
                        if (!found) {
                            alert("No empty seats found");
                        }
                    }
                    else {
                        alert('You reached the maximum number of allowed tickets to reserve');
                    }
                });

                $(wrapper).on("click", "#delBut", function (e) {
                    var elementHtml = $(this).parent().html();
                    var indexOfTicket = elementHtml.match(indexRegex)[0][0];
                    prices[indexOfTicket] = 0;
                    updatePrice();
                    $(this).parent('div').remove();
                    fields_count--;
                });

                $(wrapper).on("change", "#ticketType", function (e) {
                    var elementHtml = $(this).parent().html();
                    var indexOfTicket = elementHtml.match(indexRegex)[0][0];
                    var fieldValueTicketType = $(this).val();
                    prices[indexOfTicket] = ticketPrices[fieldValueTicketType];
                    updatePrice();
                });

                var lastSelectdValue = 0;
                $(wrapper).on("click", "#seatField", function (e) {
                    lastSelectdValue = e.target.selectedIndex;
                });

                $(wrapper).on("change", "#seatField", function (e) {
                    var selectedSeat = $(this).find("option:selected");
                    var selectedValue = selectedSeat.val();
                    $(wrapper).find(".seatclass").each(function (a) {
                        var d = $(this).find("option:selected");
                        if (!$(d).is($(selectedSeat))) {
                            if (selectedValue == $(d).val()) {
                                alert("This seat is already taken!");
                                e.target.selectedIndex = lastSelectdValue;
                                return;
                            }
                        }
                    });
                });

                function updatePrice() {
                    total_price = Object.values(prices).reduce(sumReducer);
                    price_field.text("Total price:" + total_price.toString());
                }
            });
        </script>
    </div>
</div>

